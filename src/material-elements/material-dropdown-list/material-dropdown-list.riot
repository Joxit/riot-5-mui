<material-dropdown-list>
  <ul class="dropdown-content {this.opening ? 'opening' : ''}" if="{props.opened}">
    <li each="{(item, key) in props.items}" class="{props.selected == key ? 'selected' : ''}">
      <span if="{!item.link}" onclick="{select.bind(null, {item, key})}">{item.title}</span>
      <a if="{item.link}" href="{item.link}" onclick="{select(item)}" title="{item.title}">{item.title}</a>
    </li>
  </ul>
  <script>
    export default {
      state: {
        opening: false,
        opened: false
      },
      onMounted() {
        this.state.opened = this.props.opened || false;
        if (this.props.selected) {
          this.update({
            selected: props.selected
          })
        }
      },
      onUpdated(props, state) {
        if (props.opened && !state.opened) {
          state.opened = true;
          this.open();
        } else if (!props.opened && state.opened) {
          state.opened = false;
          this.close();
        }
      },
      /**
       * Select dropdown item
       * @param e
       */
      select({item, key}) {
        this.update({
          selected: key
        });
        // Trigger event. It will help you to grab selected value from outside
        // of this component
        if (typeof this.props.onSelect === 'function') this.props.onSelect(key, item);
        
        return true;
      },
      /**
       * Open dropdown list
       */
      open() {
        this.update({
          opened: true,
          opening: true
        });
        setTimeout(() => {
          this.update({
            opening: false
          });
        }, 0);
      },
      /**
       * Close dropdown list
       */
      close() {
        this.update({
          opening: true
        });
        setTimeout(() => {
          this.update({
            opened: false,
            opening: false,
          });
        }, 200)
      }
    }
  </script>
</material-dropdown-list>