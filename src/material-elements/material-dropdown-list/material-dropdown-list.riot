<material-dropdown-list>
  <ul class="dropdown-content { state.opening ? 'opening' : '' }" if="{ state.opening || state.opened }">
    <li each="{ (item, key) in props.items }" class="{ props.selected == key ? 'selected' : '' }">
      <span if="{ !item.link }" onclick="{ select.bind(null, {item, key}) }">{item.title}</span>
      <a if="{ item.link }" href="{ item.link }" onclick="{ select(item) }" title="{ item.title }">{ item.title }</a>
    </li>
  </ul>
  <script>
    export default {
      state: {
        opening: false,
        opened: false
      },
      onMounted() {
        this.state.opened = this.props.opened || false;
        if (this.props.selected) {
          this.update({
            selected: props.selected
          })
        }
      },
      onBeforeUpdate(props, state) {
        if (props.opened !== state.opened) {
          state.opening = true;
        }
      },
      onUpdated(props, state) {
        if (state.opening) {
          setTimeout(() => {
            this.update({
              opening: false,
              opened: props.opened
            });
          }, props.opened ? 0 : 200);
        }
      },
      /**
       * Select dropdown item
       * @param e
       */
      select({
        item,
        key
      }) {
        this.update({
          selected: key
        });
        // Trigger event. It will help you to grab selected value from outside
        // of this component
        if (typeof this.props.onSelect === 'function') this.props.onSelect(key, item);

        return true;
      }
    }
  </script>
</material-dropdown-list>