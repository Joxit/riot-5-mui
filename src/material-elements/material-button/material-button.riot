<material-button>
  <material-waves onmousedown="{e => launch(e)}" center="{props.wavesCenter}" rounded="{props.rounded}" opacity="{props.wavesOpacity}" color="{props.wavesColor}" duration="{props['waves-duration']}" onWaveStart={onWaveStart} onWaveEnd={onWaveEnd} setLaunchListener={setLaunchListener}></material-waves>
  <div class="content">
    <slot />
  </div>

  <script>
    export default {
      onMounted() {
        // Attributes
        this.disabled = this.props.disabled === '' || this.props.disabled || false;
        // Launch waves
        this.launch = (e) => {
          if (!this.disabled && this.triggerLaunch) this.triggerLaunch(e);
        }
        // Trigger the click
        const onClick = this.props.onClick || this.props.onclick;
        this.root.onclick = (e) => {
          if (this.props.link) window.location.href = this.props.link;
          if (typeof onClick === 'function') onClick(e)
        }
      },
      setLaunchListener(cb) {
        this.triggerLaunch = cb;
      },
      /**
       * When wave will be starting invoke appropriate event
       */
      onWaveStart(wave) {
        if (typeof this.props.onWaveStart === 'function') this.props.onWaveStart(wave);
      },
      /**
       * When wave will end invoke appropriate event
       */
      onWaveEnd(wave) {
        if (typeof this.props.onWaveEnd === 'function') this.props.onWaveEnd(wave);
      }
    }
  </script>
</material-button>