<material-dropdown>
  <div
    class="material-dropdown-container { state.transition ? 'opening' : false } { props.animation || 'top' }"
    if="{ props.opened || state.opened }"
  >
    <template if="{ !props.items }">
      <slot></slot>
    </template>
    <template each="{ (item, key) in props.items }">
      <span
        if="{ !item.href }"
        class="material-dropdown-item { props.selected === key ? 'selected' : '' }"
        item="{ item.name || item.title }"
      >
        { item.title }
      </span>
      <a
        if="{ item.href }"
        href="{ item.href }"
        class="material-dropdown-item { props.selected === key ? 'selected' : '' }"
        item="{ item.name || item.title }"
        title="{ item.title }"
      >
        { item.title }
      </a>
    </template>
  </div>
  <script>
    import { tryCall } from '../../mixins/utilities';
    export default {
      state: {
        transition: false,
        opened: false,
      },
      onBeforeUpdate(props, state) {
        if (state.opened !== props.opened) {
          state.transition = true;
          setTimeout(
            () =>
              this.update({
                opened: props.opened,
                transition: false,
              }),
            props.opened ? 0 : 200
          );
        }
      },
      onUpdated(props, state) {
        if (props.onClick) {
          this.$$('.material-dropdown-item').forEach((elt, idx) => {
            elt.onclick = (event) => {
              const item = elt.attributes.getNamedItem('item');
              event.target.item = item && item.value;
              event.target.index = idx;
              tryCall(this.props.onClick, event);
            };
          });
        }
      },
    };
  </script>
</material-dropdown>
