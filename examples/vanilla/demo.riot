<demo>
  <div class="wrapper">
    <div class="row">
      <div class="item">
        <material-input icon="true" waves-color="#2f6975" label="Icon input" iconclicked="{() => window.console.log('icon clicked')}">
          <i class="material-icons">search</i>
        </material-input>
      </div>
      <div class="item">
        <material-button link="#onclick-triggerd">
          <div class="text">BUTTON</div>
        </material-button>
      </div>
      <div class="item">
        <div class="item">
          <div class="button-container">
            <material-button ref="buttonOne">
              <div class="text">Toggle Dropdown</div>
            </material-button><br>
            <material-dropdown ref="dropdown" ref="dropDownOne">
              <p>DropDown content</p>
            </material-dropdown>
          </div>
        </div>
        <div class="item">
          <material-navbar title="lol">
            <div class="logo"><a href="#">Logo</a></div>
          </material-navbar>
        </div>
      </div>
      <div class="item" style="margin-top: 22px">
        <material-button>
          <div class="text">Open</div>
        </material-button>
        <material-popup ref="popupOne">
          <h1 class="material-popup-title">TITLE</h1>
          <p class="material-popup-content">Accerso alius sententia ut mihi, phasmatis of interregnum ego dico, solvo
            meus mens mei,
            ego dico phasmatis audite meus placitum meus mens quod iacio (Nombre de la persona)</p>
          <div class="material-popup-action">
            <material-button>
              Ok
            </material-button>
            <material-button>
              Cancel
            </material-button>
          </div>
        </material-popup>
      </div>
      <div class="item" style="margin-top: 8px">
        <material-tabs useLine="true" tabs="[\{title:'ONE'\},\{title:'TWO'\}]"></material-tabs>
      </div>
      <!--<div class="item" style="margin-top: 8px">
            <material-loader></material-loader>
        </div>-->
    </div>

    <div class="row">
      <div class="item">
        <material-combo defaultText="Select one">
          <option value="1">One</option>
          <option value="2">Two</option>
        </material-combo>
      </div>
      <div class="item">
        <material-checkbox ref="checker">
          Label
        </material-checkbox>
      </div>
      <div class="item" style="margin-top: 26px">
        <div class="button-container">
          <material-button ref="buttonOne">
            <div class="text">Toggle Dropdown</div>
          </material-button><br>
          <material-dropdown-list items="[\{title:'One'\},\{title:'Two'\}]" ref="dropdown2" ref="dropDownOne">
            <p>DropDown content</p>
          </material-dropdown-list>
        </div>
      </div>
      <div class="item">
        <material-pane>
          <div class="material-pane-left-bar">
            <material-button rounded="true">
              <i class="material-icons">arrow_back</i>
            </material-button>
          </div>
          <div class="material-pane-title">TITLE</div>
          <div class="material-pane-right-bar">
            <material-button rounded="true">
              <i class="material-icons">more_vert</i>
            </material-button>
          </div>
          <div class="material-pane-content">
            CONTENT
          </div>
        </material-pane>
      </div>
      <div class="item">
        <material-button>
          <div class="text">Launch</div>
        </material-button>
        <material-snackbar ref="snackbar"></material-snackbar>
      </div>
      <div class="item">
        <material-textarea label="Textarea"></material-textarea>
      </div>
      <div class="item">
        <material-spinner></material-spinner>
      </div>
    </div>
  </div>
  <script>
    function openDropdown() {
      var dropdown = findTag(mounted, 'dropdown');
      !dropdown.opened ? dropdown.open() : dropdown.close();
    }

    function openDropdownTwo() {
      var dropdown = findTag(mounted, 'dropdown2');
      !dropdown.opened ? dropdown.open() : dropdown.close();
    }

    function openPopup() {
      var popup = findTag(mounted, 'popupOne');
      !popup.opened ? popup.open() : popup.close();
    }

    function launchToast() {
      var snackbar = findTag(mounted, 'snackbar');
      snackbar.addToast({
        message: 'Toast was fired. To close it just click on it!'
      })
    }

    function findTag(pack, name) {
      var searched = null;
      pack.forEach(function(tag) {
        if ((tag.root.getAttribute('ref') && tag.root.getAttribute('ref').toLowerCase() == name.toLowerCase()) ||
          (tag.root.tagName && tag.root.tagName.toLowerCase() == name.toLowerCase())) {
          searched = tag;
        }
      });
      return searched;
    }
  </script>
  <style>
    .wrapper {
      display: flex;
    }

    .row {
      flex-grow: 1;
      padding: 20px;
    }

    .item {
      padding: 10px 0;
    }

    .button-container {
      width: 100%;
      position: relative;
    }

    .logo {
      font-size: 30px;
      padding: 0 10px;
    }

    .logo a {
      text-decoration: none;
    }
  </style>
</demo>